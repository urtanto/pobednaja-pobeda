services:
  postgres1:
    image: postgres:15
    container_name: pg1
    environment:
      POSTGRES_USER: user1
      POSTGRES_PASSWORD: pass1
      POSTGRES_DB: db1
    ports:
      - "54321:5432"
    volumes:
      - pg1_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U user1 -d db1" ]
      interval: 5s
      retries: 10


  postgres2:
    image: postgres:15
    container_name: pg2
    environment:
      POSTGRES_USER: user2
      POSTGRES_PASSWORD: pass2
      POSTGRES_DB: db2
    ports:
      - "54322:5432"
    volumes:
      - pg2_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U user2 -d db2" ]
      interval: 5s
      retries: 10


  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbit
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbit_data:/var/lib/rabbitmq
    healthcheck:
      test: [ "CMD-SHELL", "rabbitmqctl status || exit 1" ]
      interval: 1s
      timeout: 5s
      retries: 60

  auth:
    container_name: auth_service
    build:
      context: .
      dockerfile: services/auth/Dockerfile
    restart: always
    ports:
      - "8001:8000"
    environment:
      DATABASE_URL: postgresql+psycopg://user1:pass1@postgres1:5432/db1
      PYTHONPATH: "${PYTHONPATH}:/app"
    depends_on:
      postgres1:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy

volumes:
  pg1_data:
  pg2_data:
  rabbit_data:

networks:
  backend:
    driver: bridge